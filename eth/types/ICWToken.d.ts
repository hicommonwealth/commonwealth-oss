/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface IcwTokenInterface extends Interface {
  functions: {
    approveOtherContract: TypedFunctionDescription<{
      encode([token, recipient, amount]: [
        string,
        string,
        BigNumberish
      ]): string;
    }>;
  };

  events: {};
}

export class IcwToken extends Contract {
  connect(signerOrProvider: Signer | Provider | string): IcwToken;
  attach(addressOrName: string): IcwToken;
  deployed(): Promise<IcwToken>;

  on(event: EventFilter | string, listener: Listener): IcwToken;
  once(event: EventFilter | string, listener: Listener): IcwToken;
  addListener(eventName: EventFilter | string, listener: Listener): IcwToken;
  removeAllListeners(eventName: EventFilter | string): IcwToken;
  removeListener(eventName: any, listener: Listener): IcwToken;

  interface: IcwTokenInterface;

  functions: {
    approveOtherContract(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "approveOtherContract(address,address,uint256)"(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  approveOtherContract(
    token: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "approveOtherContract(address,address,uint256)"(
    token: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    approveOtherContract(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "approveOtherContract(address,address,uint256)"(
      token: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
