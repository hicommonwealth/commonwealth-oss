/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { IcwProtocol } from "./IcwProtocol";

export class IcwProtocolFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IcwProtocol {
    return new Contract(address, _abi, signerOrProvider) as IcwProtocol;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "projectHash",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "project",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isCollective",
        type: "bool"
      }
    ],
    name: "ProjectCreation",
    type: "event"
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "protocolVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "allProjectsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "ipfsHash",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "cwUrl",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address"
      },
      {
        internalType: "address[]",
        name: "acceptedTokens",
        type: "address[]"
      },
      {
        internalType: "address[]",
        name: "nominations",
        type: "address[]"
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "curatorFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256"
      }
    ],
    name: "createProject",
    outputs: [
      {
        internalType: "address",
        name: "project",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
